-- test-run result file version 2
test_run = require('test_run').new()
 | ---
 | ...


test_run:cmd("create server master with script='engine/low_memory.lua'")
 | ---
 | - true
 | ...
test_run:cmd('start server master')
 | ---
 | - true
 | ...
test_run:cmd("switch master")
 | ---
 | - true
 | ...


test_run:cmd("setopt delimiter ';'")
 | ---
 | - true
 | ...
function create_space(name)
    local space = box.schema.create_space(name)
    space:format({
        { name = "id",  type = "unsigned" },
        { name = "val", type = "str" }
    })
    space:create_index('primary', { parts = { 'id' } })
    return space
end;
 | ---
 | ...

function insert(space, i)
    space:insert({ i, string.rep(string.char(32 + math.random(127-32)), math.random(1024)) })
end;
 | ---
 | ...

function fill_space(space, start)
    local _, err = nil
    local i = start
    while err == nil do _, err = pcall(insert, space, i) i = i + 1 end
end;
 | ---
 | ...

function stress_truncation(i, spaces)
    local res, space = pcall(create_space, 'test' .. tostring(i))
    if res then spaces[i] = space return end
    fill_space(box.space.test, box.space.test:len())
    for _, s in pairs(spaces) do s:truncate() end
end;
 | ---
 | ...
test_run:cmd("setopt delimiter ''");
 | ---
 | - true
 | ...


_ = create_space('test')
 | ---
 | ...
for i = 0, 27000 do insert(box.space.test, i) end
 | ---
 | ...

spaces = {}
 | ---
 | ...
counter = 0
 | ---
 | ...
status = true
 | ---
 | ...
res = nil
 | ---
 | ...
while counter < 80000 do status, res = pcall(stress_truncation, counter, spaces) counter = counter + 1 end
 | ---
 | ...
status
 | ---
 | - true
 | ...
res
 | ---
 | - null
 | ...

-- Cleanup.
test_run:cmd('switch default')
 | ---
 | - true
 | ...
test_run:drop_cluster({'master'})
 | ---
 | ...
